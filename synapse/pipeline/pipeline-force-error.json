{
	"name": "pipeline-force-error",
	"properties": {
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('levels')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item(), 2)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait1",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Fail1",
										"type": "Fail",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"message": "test-error",
											"errorCode": "01"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Check if debug run",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().TriggerName, 'Manual')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Skip Error extraction - DebugRun",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Extract error message",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pipeline-error-message",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"run_id": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"levels": {
				"type": "Array",
				"defaultValue": [
					1,
					2,
					3,
					4
				]
			},
			"trigger": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-04-07T06:55:11Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}